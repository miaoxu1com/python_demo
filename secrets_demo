import secrets
import string


# 引用 https://docs.python.org/zh-cn/3/library/secrets.html


# 备注 应用程序不应该 以可恢复的格式存储密码，无论是纯文本的还是加密的。
# 它们应当使用高加密强度的单向（不可逆）哈希函数加盐并执行哈希运算。
# 生成长度为八个字符的字母数字密码：
def random_simple_passwd(length):
    alphabet = string.ascii_letters + string.digits
    password = ''.join(secrets.choice(alphabet) for i in range(length))
    print(password)


# 生成长度为十个字符的字母数字密码，包含至少一个小写字母，至少一个大写字母以及至少三个数字：
def random_complex_passwd(length):
    alphabet = string.ascii_letters + string.digits
    while True:
        password = ''.join(secrets.choice(alphabet) for i in range(length))
        if (any(c.islower() for c in password)
                and any(c.isupper() for c in password)
                and sum(c.isdigit() for c in password) >= 3):
            break
    print(password)


# 生成 XKCD 风格的密码串：

def random_safe_url(length):
    # On standard Linux systems, use a convenient dictionary file.
    # Other platforms may need to provide their own word-list.
    with open('/usr/share/dict/words') as f:
        words = [word.strip() for word in f]
        password = ' '.join(secrets.choice(words) for i in range(length))
    print(password)


if __name__ == '__main__':
    random_simple_passwd(8)
    random_complex_passwd(10)
    random_safe_url(4)
